name: SonarQube
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-and-analyze:
    name: Build, Test and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install dotnet-coverage tool
        run: dotnet tool install --global dotnet-coverage

      - name: Start SonarQube scan
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
          /k:"johnnybehague_alexdric" `
          /o:"johnnybehague" `
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
          /d:sonar.host.url="https://sonarcloud.io" `
          /d:sonar.cs.opencover.reportsPaths="coverage.cobertura.xml"

      - name: Run tests with coverage
        run: |
          dotnet-coverage collect `
          --output "coverage.cobertura.xml" `
          --format cobertura `
          -- dotnet test .\Alexdric\Alexdric.sln --no-build --configuration Release

      - name: End SonarQube scan
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          